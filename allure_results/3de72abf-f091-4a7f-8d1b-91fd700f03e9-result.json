{"name": "Проверка соответствующего текста в вопросе: \"Сколько это стоит? И как оплатить?\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=104.0.5112.101)\nStacktrace:\n0   chromedriver                        0x000000010fd90149 chromedriver + 4469065\n1   chromedriver                        0x000000010fd1a233 chromedriver + 3985971\n2   chromedriver                        0x000000010f9b0fe8 chromedriver + 409576\n3   chromedriver                        0x000000010f992618 chromedriver + 284184\n4   chromedriver                        0x000000010fa0816b chromedriver + 766315\n5   chromedriver                        0x000000010fa16c7f chromedriver + 826495\n6   chromedriver                        0x000000010fa04b53 chromedriver + 752467\n7   chromedriver                        0x000000010f9da905 chromedriver + 579845\n8   chromedriver                        0x000000010f9db955 chromedriver + 584021\n9   chromedriver                        0x000000010fd616ad chromedriver + 4277933\n10  chromedriver                        0x000000010fd65b3a chromedriver + 4295482\n11  chromedriver                        0x000000010fd6acdf chromedriver + 4316383\n12  chromedriver                        0x000000010fd66857 chromedriver + 4298839\n13  chromedriver                        0x000000010fd3f64f chromedriver + 4138575\n14  chromedriver                        0x000000010fd811f8 chromedriver + 4407800\n15  chromedriver                        0x000000010fd8137f chromedriver + 4408191\n16  chromedriver                        0x000000010fd97cb5 chromedriver + 4500661\n17  libsystem_pthread.dylib             0x00007ff81f0604f4 _pthread_start + 125\n18  libsystem_pthread.dylib             0x00007ff81f05c00f thread_start + 15", "trace": "self = <test_check_drop_down_list.TestCheckDropDownList object at 0x106337a00>\n\n    @allure.title('Проверка соответствующего текста в вопросе: \"Сколько это стоит? И как оплатить?\"')\n    def test_how_much_question(self):\n        # перешли на страницу тестового приложения\n        self.driver.get('https://qa-scooter.praktikum-services.ru/')\n    \n        # создать объект класса страницы авторизации\n        questions_about = QuestionsAboutImportant(self.driver)\n        # выполнить скролл до нужного элемента\n>       questions_about.scroll()\n\ntest/test_check_drop_down_list.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest/questions_about_important.py:19: in scroll\n    element = self.driver.find_element(*self.how_much_btn)\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:855: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106337c70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...ff81f0604f4 _pthread_start + 125\\\\n18  libsystem_pthread.dylib             0x00007ff81f05c00f thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=104.0.5112.101)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010fd90149 chromedriver + 4469065\nE       1   chromedriver                        0x000000010fd1a233 chromedriver + 3985971\nE       2   chromedriver                        0x000000010f9b0fe8 chromedriver + 409576\nE       3   chromedriver                        0x000000010f992618 chromedriver + 284184\nE       4   chromedriver                        0x000000010fa0816b chromedriver + 766315\nE       5   chromedriver                        0x000000010fa16c7f chromedriver + 826495\nE       6   chromedriver                        0x000000010fa04b53 chromedriver + 752467\nE       7   chromedriver                        0x000000010f9da905 chromedriver + 579845\nE       8   chromedriver                        0x000000010f9db955 chromedriver + 584021\nE       9   chromedriver                        0x000000010fd616ad chromedriver + 4277933\nE       10  chromedriver                        0x000000010fd65b3a chromedriver + 4295482\nE       11  chromedriver                        0x000000010fd6acdf chromedriver + 4316383\nE       12  chromedriver                        0x000000010fd66857 chromedriver + 4298839\nE       13  chromedriver                        0x000000010fd3f64f chromedriver + 4138575\nE       14  chromedriver                        0x000000010fd811f8 chromedriver + 4407800\nE       15  chromedriver                        0x000000010fd8137f chromedriver + 4408191\nE       16  chromedriver                        0x000000010fd97cb5 chromedriver + 4500661\nE       17  libsystem_pthread.dylib             0x00007ff81f0604f4 _pthread_start + 125\nE       18  libsystem_pthread.dylib             0x00007ff81f05c00f thread_start + 15\n\nvenv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:243: NoSuchWindowException"}, "steps": [{"name": "Открываем браузер Chrome", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"37a4f07d13295326124d0045e7ef8283\")>"}], "start": 1661801524321, "stop": 1661801524321}, {"name": "Выполняем проскролл до нужного элемента", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=104.0.5112.101)\nStacktrace:\n0   chromedriver                        0x000000010fd90149 chromedriver + 4469065\n1   chromedriver                        0x000000010fd1a233 chromedriver + 3985971\n2   chromedriver                        0x000000010f9b0fe8 chromedriver + 409576\n3   chromedriver                        0x000000010f992618 chromedriver + 284184\n4   chromedriver                        0x000000010fa0816b chromedriver + 766315\n5   chromedriver                        0x000000010fa16c7f chromedriver + 826495\n6   chromedriver                        0x000000010fa04b53 chromedriver + 752467\n7   chromedriver                        0x000000010f9da905 chromedriver + 579845\n8   chromedriver                        0x000000010f9db955 chromedriver + 584021\n9   chromedriver                        0x000000010fd616ad chromedriver + 4277933\n10  chromedriver                        0x000000010fd65b3a chromedriver + 4295482\n11  chromedriver                        0x000000010fd6acdf chromedriver + 4316383\n12  chromedriver                        0x000000010fd66857 chromedriver + 4298839\n13  chromedriver                        0x000000010fd3f64f chromedriver + 4138575\n14  chromedriver                        0x000000010fd811f8 chromedriver + 4407800\n15  chromedriver                        0x000000010fd8137f chromedriver + 4408191\n16  chromedriver                        0x000000010fd97cb5 chromedriver + 4500661\n17  libsystem_pthread.dylib             0x00007ff81f0604f4 _pthread_start + 125\n18  libsystem_pthread.dylib             0x00007ff81f05c00f thread_start + 15\n\n", "trace": "  File \"/Users/sergejkislenko/Desktop/Python/Sprint_4/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/sergejkislenko/Desktop/Python/Sprint_4/test/questions_about_important.py\", line 19, in scroll\n    element = self.driver.find_element(*self.how_much_btn)\n  File \"/Users/sergejkislenko/Desktop/Python/Sprint_4/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 855, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"/Users/sergejkislenko/Desktop/Python/Sprint_4/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 428, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/sergejkislenko/Desktop/Python/Sprint_4/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1661801524321, "stop": 1661801527324}], "start": 1661801497425, "stop": 1661801527330, "uuid": "f031a86f-db20-43c7-8eaf-ba01e08ab08e", "historyId": "0a930334c6775f40b268a2171c0dae88", "testCaseId": "e1ed5120f34ec60cc9426afc25fb4c84", "fullName": "test.test_check_drop_down_list.TestCheckDropDownList#test_how_much_question", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_check_drop_down_list"}, {"name": "subSuite", "value": "TestCheckDropDownList"}, {"name": "host", "value": "MacBook-Pro-Sergej.local"}, {"name": "thread", "value": "27102-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_check_drop_down_list"}]}